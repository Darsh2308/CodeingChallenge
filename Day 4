def next_gap(gap):
    if gap <= 1:
        return 0
    return (gap // 2) + (gap % 2)

def merge(arr1, arr2, m, n):
    total = m + n
    gap = next_gap(total)
    while gap > 0:
        # Compare elements in the first array
        i = 0
        while i + gap < m:
            if arr1[i] > arr1[i + gap]:
                arr1[i], arr1[i + gap] = arr1[i + gap], arr1[i]
            i += 1

        # Compare elements in both arrays
        j = gap - m if gap > m else 0
        i = max(0, m - gap)
        while i < m and j < n:
            if arr1[i] > arr2[j]:
                arr1[i], arr2[j] = arr2[j], arr1[i]
            i += 1
            j += 1

        # Compare elements in the second array
        if j < n:
            j = 0
            while j + gap < n:
                if arr2[j] > arr2[j + gap]:
                    arr2[j], arr2[j + gap] = arr2[j + gap], arr2[j]
                j += 1

        gap = next_gap(gap)

# Test case integrations
test_cases = [
    {"arr1": [1, 3, 5], "arr2": [2, 4, 6, 8]},
    {"arr1": [10, 12, 14], "arr2": [1, 3, 5]},
    {"arr1": [2, 3, 8], "arr2": [4, 6, 10]},
    {"arr1": [1], "arr2": [2]},
    {"arr1": list(range(1, 50001)), "arr2": list(range(50001, 100001))},
]

for idx, case in enumerate(test_cases, 1):
    arr1 = case["arr1"].copy()
    arr2 = case["arr2"].copy()
    merge(arr1, arr2, len(arr1), len(arr2))
    print(f"Test Case {idx}:")
    print("arr1:", arr1)
    print("arr2:", arr2)
    print("---")
